@if $include-grid == true{




/*------------------------------------*\
    $grid
\*------------------------------------*/


* {
  box-sizing: border-box;
}
.grid {
  display: flex;
  align-items: stretch;
  flex-wrap: wrap;

}
.grid--leftalign {
  justify-content: flex-start;
}
.grid--rightalign {
  justify-content: flex-end;
  [class^="grid--item-"], [class*=" grid--item-"] {
      margin-right: 0;
      margin-left: $gap / 2;
  }
}
.grid--direction-column {
  flex-direction: column;
}
.grid--spacearound {
  justify-content: space-around;
  [class^="grid--item-"], [class*=" grid--item-"] {
      margin-right: 0;
  }
}
.grid--spacebetween{
  justify-content: space-between;
}
.grid--justify-center {
  justify-content: center;
}
.grid--stretch {
  align-items: stretch;
}
.grid--align-vertical {
  align-items: center;
}
.grid--aligntop {
  align-items: flex-start;
}
.grid--aligncenter {
  align-items: center;
}
.grid---nowrap {
  flex-wrap: nowrap;
}
.grid-align-right {
  margin-left: auto;
}
.grid-align-center {
  display: flex;
  margin: auto;
}

[class^="item-"], [class*=" item-"] {
  background-color: pink;
  flex-shrink: 0;
    flex-grow: 1;
    margin: $gap / 2;
    padding: 5px;
    min-height: 100px;  // remove, it's only for presentation purposes.
}

@for $i from 1 to ($grid-size + 1) {
  // Total size (We would need to substract the margin to avoid wrapping);
  $width : 100 / $grid-size * $i * 1%;

  .item-#{$i} {
    flex-basis: 100%;
      @include respond-to(medium) {
        flex:0 0 calc(#{$width} - #{$gap});
    }
  }
}

} // end if
